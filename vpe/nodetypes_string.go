// Code generated by "stringer -type=NodeTypes"; DO NOT EDIT.

package vpe

import (
	"errors"
	"strconv"
)

var _ = errors.New("dummy error")

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[BODY-0]
	_ = x[GROUP-1]
	_ = x[JOINT-2]
	_ = x[NodeTypesN-3]
}

const _NodeTypes_name = "BODYGROUPJOINTNodeTypesN"

var _NodeTypes_index = [...]uint8{0, 4, 9, 14, 24}

func (i NodeTypes) String() string {
	if i < 0 || i >= NodeTypes(len(_NodeTypes_index)-1) {
		return "NodeTypes(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _NodeTypes_name[_NodeTypes_index[i]:_NodeTypes_index[i+1]]
}

func (i *NodeTypes) FromString(s string) error {
	for j := 0; j < len(_NodeTypes_index)-1; j++ {
		if s == _NodeTypes_name[_NodeTypes_index[j]:_NodeTypes_index[j+1]] {
			*i = NodeTypes(j)
			return nil
		}
	}
	return errors.New("String: " + s + " is not a valid option for type: NodeTypes")
}
